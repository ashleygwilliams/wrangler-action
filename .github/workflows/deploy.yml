on: pull_request

jobs:
  build-only:
    runs-on: ubuntu-latest
    name: Only build the app
    steps:
      - uses: actions/checkout@v3
      - name: Build app
        uses: ./
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          workingDirectory: "test"
          secrets: |
            SECRET1
            SECRET2
          preCommands: wrangler deploy --dry-run && exit 0
        env:
          SECRET1: ${{ secrets.SECRET1 }}
          SECRET2: ${{ secrets.SECRET2 }}
  deploy:
    runs-on: ubuntu-latest
    name: Deploy app
    steps:
      - uses: actions/checkout@v3
      - name: Deploy app
        uses: ./
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          workingDirectory: "test"
  deploy_legacy_credentials:
    runs-on: ubuntu-latest
    name: Deploy app with legacy credentials
    steps:
      - uses: actions/checkout@v3
      - name: Deploy app
        uses: ./
        with:
          apiKey: ${{ secrets.CLOUDFLARE_API_KEY }}
          email: ${{ secrets.CLOUDFLARE_EMAIL }}
          workingDirectory: "test"
  deploy_hardcoded_wrangler_version:
    runs-on: ubuntu-latest
    name: Deploy app with hardcoded Wrangler version
    steps:
      - uses: actions/checkout@v3
      - name: Deploy app
        uses: ./
        with:
          apiKey: ${{ secrets.CLOUDFLARE_API_KEY }}
          email: ${{ secrets.CLOUDFLARE_EMAIL }}
          wranglerVersion: "1.5.0"
          workingDirectory: "test"
  deploy_hardcoded_wrangler_v2:
    runs-on: ubuntu-latest
    name: Deploy app with hardcoded Wrangler v2
    steps:
      - uses: actions/checkout@v3
      - name: Deploy app
        uses: ./
        with:
          apiKey: ${{ secrets.CLOUDFLARE_API_KEY }}
          wranglerVersion: "2.20.0"
          workingDirectory: "test"
  deploy_secrets:
    runs-on: ubuntu-latest
    name: Deploy app with secrets
    steps:
      - uses: actions/checkout@v3
      - name: Deploy app
        uses: ./
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          workingDirectory: "test"
          secrets: |
            SECRET1
            SECRET2
          preCommands: echo "*** pre command ***"
          postCommands: |
            echo "*** post commands ***"
            echo "******"
        env:
          SECRET1: ${{ secrets.SECRET1 }}
          SECRET2: ${{ secrets.SECRET2 }}
