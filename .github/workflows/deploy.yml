on: pull_request

jobs:
  build_and_deploy_tests:
    runs-on: ubuntu-latest
    name: Build and Deploy Wrangler Action Tests
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"
      - name: Run TSC & Build Action
        run: |
          npm install
          npm run build

      - name: Build app
        uses: ./
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          workingDirectory: "test"
          secrets: |
            SECRET1
            SECRET2
          preCommands: wrangler deploy --dry-run && exit 0
        env:
          SECRET1: ${{ secrets.SECRET1 }}
          SECRET2: ${{ secrets.SECRET2 }}

      - name: Deploy app w/ apiToken
        uses: ./
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          workingDirectory: "test"

      - name: Deploy app
        uses: ./
        with:
          apiKey: ${{ secrets.CLOUDFLARE_API_KEY }}
          email: ${{ secrets.CLOUDFLARE_EMAIL }}
          workingDirectory: "test"

      - name: Deploy app w/ hardcoded Wrangler v1
        uses: ./
        with:
          apiKey: ${{ secrets.CLOUDFLARE_API_KEY }}
          email: ${{ secrets.CLOUDFLARE_EMAIL }}
          wranglerVersion: "1.5.0"
          workingDirectory: "test"

      - name: Deploy app w/ hardcoded Wrangler v2
        uses: ./
        with:
          apiKey: ${{ secrets.CLOUDFLARE_API_KEY }}
          wranglerVersion: "2.20.0"
          workingDirectory: "test"

      - name: Deploy app w/ secrets
        uses: ./
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          workingDirectory: "test"
          secrets: |
            SECRET1
            SECRET2
          preCommands: echo "*** pre command ***"
          postCommands: |
            echo "*** post commands ***"
            echo "******"
        env:
          SECRET1: ${{ secrets.SECRET1 }}
          SECRET2: ${{ secrets.SECRET2 }}
